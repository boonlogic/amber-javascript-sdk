/**
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SensorUsageInfo from './SensorUsageInfo';

/**
* The SensorInstanceFull model module.
* @module model/SensorInstanceFull
* @version 1.0.3
*/
export default class SensorInstanceFull {
    /**
    * Constructs a new <code>SensorInstanceFull</code>.
    * @alias module:model/SensorInstanceFull
    * @class
    * @param label {String} Additional label to be assigned for sensor
    * @param sensorId {String} Unique identifier for sensor
    * @param usageInfo {module:model/SensorUsageInfo} 
    */

    constructor(label, sensorId, usageInfo) {
        
        
        this['label'] = label;
        this['sensorId'] = sensorId;
        this['usageInfo'] = usageInfo;
        
    }

    /**
    * Constructs a <code>SensorInstanceFull</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/SensorInstanceFull} obj Optional instance to populate.
    * @return {module:model/SensorInstanceFull} The populated <code>SensorInstanceFull</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SensorInstanceFull();
                        
            
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('sensorId')) {
                obj['sensorId'] = ApiClient.convertToType(data['sensorId'], 'String');
            }
            if (data.hasOwnProperty('usageInfo')) {
                obj['usageInfo'] = SensorUsageInfo.constructFromObject(data['usageInfo']);
            }
        }
        return obj;
    }

    /**
    * Additional label to be assigned for sensor
    * @member {String} label
    */
    'label' = undefined;
    /**
    * Unique identifier for sensor
    * @member {String} sensorId
    */
    'sensorId' = undefined;
    /**
    * @member {module:model/SensorUsageInfo} usageInfo
    */
    'usageInfo' = undefined;




}
