/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The PostAuth2Response model module.
 * @module model/PostAuth2Response
 * @version 1.0.3
 */
export class PostAuth2Response {
  /**
   * Constructs a new <code>PostAuth2Response</code>.
   * @alias module:model/PostAuth2Response
   * @class
   * @param idToken {String} Identifier token to be used as Bearer token
   * @param refreshToken {String} Refresh token identifier
   * @param expiresIn {String} Amount of time before token expires
   * @param tokenType {String} Type of authentication token
   */
  constructor(idToken, refreshToken, expiresIn, tokenType) {
    this.idToken = idToken;
    this.refreshToken = refreshToken;
    this.expiresIn = expiresIn;
    this.tokenType = tokenType;
  }

  /**
   * Constructs a <code>PostAuth2Response</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PostAuth2Response} obj Optional instance to populate.
   * @return {module:model/PostAuth2Response} The populated <code>PostAuth2Response</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PostAuth2Response();
      if (data.hasOwnProperty('idToken'))
        obj.idToken = ApiClient.convertToType(data['idToken'], 'String');
      if (data.hasOwnProperty('refreshToken'))
        obj.refreshToken = ApiClient.convertToType(data['refreshToken'], 'String');
      if (data.hasOwnProperty('expiresIn'))
        obj.expiresIn = ApiClient.convertToType(data['expiresIn'], 'String');
      if (data.hasOwnProperty('tokenType'))
        obj.tokenType = ApiClient.convertToType(data['tokenType'], 'String');
    }
    return obj;
  }
}

/**
 * Identifier token to be used as Bearer token
 * @member {String} idToken
 */
PostAuth2Response.prototype.idToken = undefined;

/**
 * Refresh token identifier
 * @member {String} refreshToken
 */
PostAuth2Response.prototype.refreshToken = undefined;

/**
 * Amount of time before token expires
 * @member {String} expiresIn
 */
PostAuth2Response.prototype.expiresIn = undefined;

/**
 * Type of authentication token
 * @member {String} tokenType
 */
PostAuth2Response.prototype.tokenType = undefined;

