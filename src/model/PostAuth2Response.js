/**
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The PostAuth2Response model module.
* @module model/PostAuth2Response
* @version 1.0.3
*/
export default class PostAuth2Response {
    /**
    * Constructs a new <code>PostAuth2Response</code>.
    * @alias module:model/PostAuth2Response
    * @class
    * @param expiresIn {Number} Amount of time before token expires
    * @param idToken {String} Identifier token to be used as Bearer token
    * @param refreshToken {String} Refresh token identifier
    * @param tokenType {String} Type of authentication token
    */

    constructor(expiresIn, idToken, refreshToken, tokenType) {
        
        
        this['expiresIn'] = expiresIn;
        this['idToken'] = idToken;
        this['refreshToken'] = refreshToken;
        this['tokenType'] = tokenType;
        
    }

    /**
    * Constructs a <code>PostAuth2Response</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/PostAuth2Response} obj Optional instance to populate.
    * @return {module:model/PostAuth2Response} The populated <code>PostAuth2Response</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostAuth2Response();
                        
            
            if (data.hasOwnProperty('expiresIn')) {
                obj['expiresIn'] = ApiClient.convertToType(data['expiresIn'], 'Number');
            }
            if (data.hasOwnProperty('idToken')) {
                obj['idToken'] = ApiClient.convertToType(data['idToken'], 'String');
            }
            if (data.hasOwnProperty('refreshToken')) {
                obj['refreshToken'] = ApiClient.convertToType(data['refreshToken'], 'String');
            }
            if (data.hasOwnProperty('tokenType')) {
                obj['tokenType'] = ApiClient.convertToType(data['tokenType'], 'String');
            }
        }
        return obj;
    }

    /**
    * Amount of time before token expires
    * @member {Number} expiresIn
    */
    'expiresIn' = undefined;
    /**
    * Identifier token to be used as Bearer token
    * @member {String} idToken
    */
    'idToken' = undefined;
    /**
    * Refresh token identifier
    * @member {String} refreshToken
    */
    'refreshToken' = undefined;
    /**
    * Type of authentication token
    * @member {String} tokenType
    */
    'tokenType' = undefined;




}
