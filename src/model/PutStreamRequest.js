/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {PutStreamFeature} from './PutStreamFeature';

/**
 * The PutStreamRequest model module.
 * @module model/PutStreamRequest
 * @version 1.0.3
 */
export class PutStreamRequest {
  /**
   * Constructs a new <code>PutStreamRequest</code>.
   * @alias module:model/PutStreamRequest
   * @class
   * @param vector {Array.<module:model/PutStreamFeature>} 
   */
  constructor(vector) {
    this.vector = vector;
  }

  /**
   * Constructs a <code>PutStreamRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PutStreamRequest} obj Optional instance to populate.
   * @return {module:model/PutStreamRequest} The populated <code>PutStreamRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PutStreamRequest();
      if (data.hasOwnProperty('vector'))
        obj.vector = ApiClient.convertToType(data['vector'], [PutStreamFeature]);
      if (data.hasOwnProperty('submitRule'))
        obj.submitRule = ApiClient.convertToType(data['submitRule'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Array.<module:model/PutStreamFeature>} vector
 */
PutStreamRequest.prototype.vector = undefined;

/**
 * Allowed values for the <code>submitRule</code> property.
 * @enum {String}
 * @readonly
 */
PutStreamRequest.SubmitRuleEnum = {
  /**
   * value: "default"
   * @const
   */
  _default: "default",

  /**
   * value: "submit"
   * @const
   */
  submit: "submit",

  /**
   * value: "nosubmit"
   * @const
   */
  nosubmit: "nosubmit"
};
/**
 * Policy for submitting sensor fusion vector on this request, overriding per-feature submit rules in fusion configuration. One of \"default\", \"submit\", \"nosubmit\" (defaults to \"default\"). Under \"default\" policy, the per-feature settings of \"submit\" or \"nosubmit\" are used to determine whether this update to the fusion vector triggers an inference.
 * @member {module:model/PutStreamRequest.SubmitRuleEnum} submitRule
 */
PutStreamRequest.prototype.submitRule = undefined;

