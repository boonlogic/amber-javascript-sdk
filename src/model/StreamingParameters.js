/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The StreamingParameters model module.
 * @module model/StreamingParameters
 * @version 1.0.3
 */
export class StreamingParameters {
  /**
   * Constructs a new <code>StreamingParameters</code>.
   * @alias module:model/StreamingParameters
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>StreamingParameters</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StreamingParameters} obj Optional instance to populate.
   * @return {module:model/StreamingParameters} The populated <code>StreamingParameters</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new StreamingParameters();
      if (data.hasOwnProperty('anomalyHistoryWindow'))
        obj.anomalyHistoryWindow = ApiClient.convertToType(data['anomalyHistoryWindow'], 'Number');
      if (data.hasOwnProperty('learningRateNumerator'))
        obj.learningRateNumerator = ApiClient.convertToType(data['learningRateNumerator'], 'Number');
      if (data.hasOwnProperty('learningRateDenominator'))
        obj.learningRateDenominator = ApiClient.convertToType(data['learningRateDenominator'], 'Number');
      if (data.hasOwnProperty('learningMaxClusters'))
        obj.learningMaxClusters = ApiClient.convertToType(data['learningMaxClusters'], 'Number');
      if (data.hasOwnProperty('learningMaxSamples'))
        obj.learningMaxSamples = ApiClient.convertToType(data['learningMaxSamples'], 'Number');
    }
    return obj;
  }
}

/**
 * the number of samples to use when calculating AH
 * @member {Number} anomalyHistoryWindow
 */
StreamingParameters.prototype.anomalyHistoryWindow = undefined;

/**
 * enables graduation requirements for learning
 * @member {Number} learningRateNumerator
 */
StreamingParameters.prototype.learningRateNumerator = undefined;

/**
 * enables graduation requirements for learning
 * @member {Number} learningRateDenominator
 */
StreamingParameters.prototype.learningRateDenominator = undefined;

/**
 * learning graduation requirement for stopping learning upon reaching this cluster count
 * @member {Number} learningMaxClusters
 */
StreamingParameters.prototype.learningMaxClusters = undefined;

/**
 * learning graduation requirement for stopping learning after acquiring this many samples
 * @member {Number} learningMaxSamples
 */
StreamingParameters.prototype.learningMaxSamples = undefined;

