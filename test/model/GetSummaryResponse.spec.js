/**
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmberApiServer);
  }
}(this, function(expect, AmberApiServer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmberApiServer.GetSummaryResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetSummaryResponse', function() {
    it('should create an instance of GetSummaryResponse', function() {
      // uncomment below and update the code to test GetSummaryResponse
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be.a(AmberApiServer.GetSummaryResponse);
    });

    it('should have the property magicNumber (base name: "MagicNumber")', function() {
      // uncomment below and update the code to test the property magicNumber
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property versionNumber (base name: "VersionNumber")', function() {
      // uncomment below and update the code to test the property versionNumber
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mNano (base name: "m_Nano")', function() {
      // uncomment below and update the code to test the property mNano
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mBufferStats (base name: "m_BufferStats")', function() {
      // uncomment below and update the code to test the property mBufferStats
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mAutotune (base name: "m_Autotune")', function() {
      // uncomment below and update the code to test the property mAutotune
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mAutotuningElbowClusterCounts (base name: "m_AutotuningElbowClusterCounts")', function() {
      // uncomment below and update the code to test the property mAutotuningElbowClusterCounts
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mAutotuningElbowPVArray (base name: "m_AutotuningElbowPVArray")', function() {
      // uncomment below and update the code to test the property mAutotuningElbowPVArray
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mStreamingParameters (base name: "m_StreamingParameters")', function() {
      // uncomment below and update the code to test the property mStreamingParameters
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mAmberStatus (base name: "m_AmberStatus")', function() {
      // uncomment below and update the code to test the property mAmberStatus
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mTraining (base name: "m_Training")', function() {
      // uncomment below and update the code to test the property mTraining
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mAnomalyThreshold (base name: "m_AnomalyThreshold")', function() {
      // uncomment below and update the code to test the property mAnomalyThreshold
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mAmberWarningCriticalValue (base name: "m_AmberWarningCriticalValue")', function() {
      // uncomment below and update the code to test the property mAmberWarningCriticalValue
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mAmberAlertCriticalValue (base name: "m_AmberAlertCriticalValue")', function() {
      // uncomment below and update the code to test the property mAmberAlertCriticalValue
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mErrorStringBuffer (base name: "m_ErrorStringBuffer")', function() {
      // uncomment below and update the code to test the property mErrorStringBuffer
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mClusteringParametersInitialized (base name: "m_ClusteringParametersInitialized")', function() {
      // uncomment below and update the code to test the property mClusteringParametersInitialized
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mStreamingMode (base name: "m_StreamingMode")', function() {
      // uncomment below and update the code to test the property mStreamingMode
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mStreamingModeStatus (base name: "m_StreamingModeStatus")', function() {
      // uncomment below and update the code to test the property mStreamingModeStatus
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mModifiedAt (base name: "m_ModifiedAt")', function() {
      // uncomment below and update the code to test the property mModifiedAt
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mAnomalyMetricByAnomalyCount (base name: "m_AnomalyMetricByAnomalyCount")', function() {
      // uncomment below and update the code to test the property mAnomalyMetricByAnomalyCount
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentAnomalyCount (base name: "m_RecentAnomalyCount")', function() {
      // uncomment below and update the code to test the property mRecentAnomalyCount
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mResultsIDArray (base name: "m_ResultsIDArray")', function() {
      // uncomment below and update the code to test the property mResultsIDArray
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mTrainingSamples (base name: "m_TrainingSamples")', function() {
      // uncomment below and update the code to test the property mTrainingSamples
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentSamples (base name: "m_RecentSamples")', function() {
      // uncomment below and update the code to test the property mRecentSamples
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentRawSamples (base name: "m_RecentRawSamples")', function() {
      // uncomment below and update the code to test the property mRecentRawSamples
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentTimes (base name: "m_RecentTimes")', function() {
      // uncomment below and update the code to test the property mRecentTimes
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentSIs (base name: "m_RecentSIs")', function() {
      // uncomment below and update the code to test the property mRecentSIs
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentRIs (base name: "m_RecentRIs")', function() {
      // uncomment below and update the code to test the property mRecentRIs
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentADs (base name: "m_RecentADs")', function() {
      // uncomment below and update the code to test the property mRecentADs
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentAHs (base name: "m_RecentAHs")', function() {
      // uncomment below and update the code to test the property mRecentAHs
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentIDs (base name: "m_RecentIDs")', function() {
      // uncomment below and update the code to test the property mRecentIDs
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentAMs (base name: "m_RecentAMs")', function() {
      // uncomment below and update the code to test the property mRecentAMs
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

    it('should have the property mRecentAWs (base name: "m_RecentAWs")', function() {
      // uncomment below and update the code to test the property mRecentAWs
      //var instane = new AmberApiServer.GetSummaryResponse();
      //expect(instance).to.be();
    });

  });

}));
