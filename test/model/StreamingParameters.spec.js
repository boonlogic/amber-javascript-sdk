/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmberApiServer);
  }
}(this, function(expect, AmberApiServer) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('StreamingParameters', function() {
      beforeEach(function() {
        instance = new AmberApiServer.StreamingParameters();
      });

      it('should create an instance of StreamingParameters', function() {
        // TODO: update the code to test StreamingParameters
        expect(instance).to.be.a(AmberApiServer.StreamingParameters);
      });

      it('should have the property anomalyHistoryWindow (base name: "anomalyHistoryWindow")', function() {
        // TODO: update the code to test the property anomalyHistoryWindow
        expect(instance).to.have.property('anomalyHistoryWindow');
        // expect(instance.anomalyHistoryWindow).to.be(expectedValueLiteral);
      });

      it('should have the property learningRateNumerator (base name: "learningRateNumerator")', function() {
        // TODO: update the code to test the property learningRateNumerator
        expect(instance).to.have.property('learningRateNumerator');
        // expect(instance.learningRateNumerator).to.be(expectedValueLiteral);
      });

      it('should have the property learningRateDenominator (base name: "learningRateDenominator")', function() {
        // TODO: update the code to test the property learningRateDenominator
        expect(instance).to.have.property('learningRateDenominator');
        // expect(instance.learningRateDenominator).to.be(expectedValueLiteral);
      });

      it('should have the property learningMaxClusters (base name: "learningMaxClusters")', function() {
        // TODO: update the code to test the property learningMaxClusters
        expect(instance).to.have.property('learningMaxClusters');
        // expect(instance.learningMaxClusters).to.be(expectedValueLiteral);
      });

      it('should have the property learningMaxSamples (base name: "learningMaxSamples")', function() {
        // TODO: update the code to test the property learningMaxSamples
        expect(instance).to.have.property('learningMaxSamples');
        // expect(instance.learningMaxSamples).to.be(expectedValueLiteral);
      });

    });
  });

}));
