/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmberApiServer);
  }
}(this, function(expect, AmberApiServer) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MAutotune', function() {
      beforeEach(function() {
        instance = new AmberApiServer.MAutotune();
      });

      it('should create an instance of MAutotune', function() {
        // TODO: update the code to test MAutotune
        expect(instance).to.be.a(AmberApiServer.MAutotune);
      });

      it('should have the property versionNumber (base name: "VersionNumber")', function() {
        // TODO: update the code to test the property versionNumber
        expect(instance).to.have.property('versionNumber');
        // expect(instance.versionNumber).to.be(expectedValueLiteral);
      });

      it('should have the property mAutotuningInProgress (base name: "m_AutotuningInProgress")', function() {
        // TODO: update the code to test the property mAutotuningInProgress
        expect(instance).to.have.property('mAutotuningInProgress');
        // expect(instance.mAutotuningInProgress).to.be(expectedValueLiteral);
      });

      it('should have the property mPercentComplete (base name: "m_PercentComplete")', function() {
        // TODO: update the code to test the property mPercentComplete
        expect(instance).to.have.property('mPercentComplete');
        // expect(instance.mPercentComplete).to.be(expectedValueLiteral);
      });

      it('should have the property mAutotuningSucceeded (base name: "m_AutotuningSucceeded")', function() {
        // TODO: update the code to test the property mAutotuningSucceeded
        expect(instance).to.have.property('mAutotuningSucceeded');
        // expect(instance.mAutotuningSucceeded).to.be(expectedValueLiteral);
      });

      it('should have the property mNumPatternsToAutotune (base name: "m_NumPatternsToAutotune")', function() {
        // TODO: update the code to test the property mNumPatternsToAutotune
        expect(instance).to.have.property('mNumPatternsToAutotune');
        // expect(instance.mNumPatternsToAutotune).to.be(expectedValueLiteral);
      });

      it('should have the property mErrorStringBuffer (base name: "m_ErrorStringBuffer")', function() {
        // TODO: update the code to test the property mErrorStringBuffer
        expect(instance).to.have.property('mErrorStringBuffer');
        // expect(instance.mErrorStringBuffer).to.be(expectedValueLiteral);
      });

      it('should have the property mFeaturesToTuneArray (base name: "m_FeaturesToTuneArray")', function() {
        // TODO: update the code to test the property mFeaturesToTuneArray
        expect(instance).to.have.property('mFeaturesToTuneArray');
        // expect(instance.mFeaturesToTuneArray).to.be(expectedValueLiteral);
      });

      it('should have the property mNCP (base name: "m_NCP")', function() {
        // TODO: update the code to test the property mNCP
        expect(instance).to.have.property('mNCP');
        // expect(instance.mNCP).to.be(expectedValueLiteral);
      });

      it('should have the property mAP (base name: "m_AP")', function() {
        // TODO: update the code to test the property mAP
        expect(instance).to.have.property('mAP');
        // expect(instance.mAP).to.be(expectedValueLiteral);
      });

    });
  });

}));
